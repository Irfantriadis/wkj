from flask import Flask, render_template, request, redirect, url_for
import tensorflow as tf
import numpy as np
from PIL import Image
import os

app = Flask(__name__)
UPLOAD_FOLDER = 'static/uploads/'
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

# Load the TFLite model and allocate tensors
interpreter = tf.lite.Interpreter(model_path="E:\Tanaman Herbal\Daun\optimized_resnet_model.tflite")
interpreter.allocate_tensors()

# Load labels
with open('labels.txt', 'r') as f:
    labels = f.read().splitlines()

# Function to preprocess the image
def preprocess_image(image_path):
    img = Image.open(image_path)
    img = img.resize((224, 224))  # Resize to match model input size
    img = np.array(img).astype(np.float32) / 255.0  # Normalize image and convert to FLOAT32
    img = np.expand_dims(img, axis=0)  # Add batch dimension
    return img

# Function to make predictions
def predict(image_path):
    input_details = interpreter.get_input_details()
    output_details = interpreter.get_output_details()
    
    img = preprocess_image(image_path)
    
    interpreter.set_tensor(input_details[0]['index'], img)
    interpreter.invoke()
    
    output_data = interpreter.get_tensor(output_details[0]['index'])
    predicted_index = np.argmax(output_data)
    confidence = output_data[0][predicted_index]
    
    return labels[predicted_index], confidence

# Route for home page
@app.route('/')
def index():
    return render_template('index.html')

# Route to handle image upload and prediction
@app.route('/upload', methods=['POST'])
def upload_file():
    if 'file' not in request.files:
        return redirect(request.url)
    
    file = request.files['file']
    
    if file.filename == '':
        return redirect(request.url)
    
    if file:
        filepath = os.path.join(app.config['UPLOAD_FOLDER'], file.filename)
        file.save(filepath)
        
        label, confidence = predict(filepath)
        
        return render_template('result.html', image=file.filename, label=label, confidence=confidence)

if __name__ == '__main__':
    app.run(debug=True)
